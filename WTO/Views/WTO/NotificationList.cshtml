@model BusinessObjects.Notification.NotificationList
@{
    ViewBag.Title = "Notification List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/contents/css/css/bootstrap-combobox.css" rel="stylesheet" />
<script src="~/contents/js/bootstrap-combobox.js"></script>
<script src="~/JQuery/NotificationList.js?v=10" type="text/javascript"></script>
<style>
    .adv {
        position: absolute;
        right: 15px;
        top: 45px;
    }

    .input-group span {
        background-color: #fff !important;
    }

    .combobox-container input {
        border-right-style: none;
    }

    .input-group-addon {
        padding: 6px 6px !important;
    }

    .caret {
        border-top: 6px dashed !important;
        border-right: 3px solid transparent !important;
        border-left: 3px solid transparent !important;
    }

    .fixed {
        top: 0;
        position: fixed;
        width: auto;
        display: none;
        border: none;
    }

    .optionGroup {
        font-weight: bold !important;
    }

    .optionChild {
        padding-left: 15px !important;
    }

    .ui-autocomplete {
        max-height: 200px;
        overflow-y: auto;
        /* prevent horizontal scrollbar */
        overflow-x: hidden;
        width: 45% !important;
    }
    /* IE 6 doesn't support max-height
        * we use height instead, but this forces the menu to always be this tall
        */
    * html .ui-autocomplete {
        height: 200px;
    }
</style>
@Html.Hidden("hdnPageIndex", "1")
@Html.Hidden("hdnNotificationCount", @Model.TotalCount)
@if (Decimal.Divide(Model.TotalCount, 10) > Model.TotalCount / (Request["PageSize"] == null ? 10 : Convert.ToInt32(Request["PageSize"])))
{
    @Html.Hidden("hdnMaxPageIndex", Model.TotalCount / (Request["PageSize"] == null ? 10 : Convert.ToInt32(Request["PageSize"])) + 1)
}
else
{
    @Html.Hidden("hdnMaxPageIndex", Model.TotalCount / (Request["PageSize"] == null ? 10 : Convert.ToInt32(Request["PageSize"])))
}

@Html.Hidden("hdnCallFrom", "")
<!-- body section start -->
<div>
    <div class="container-fluid">
        <div class="row bodybackground">
            <div class="col-xs-12 col-sm-12 col-md-12">
                <div class="row topbg">
                    <div class="col-xs-12 col-sm-12 col-md-12 top-offset-20 bottom-offset-10">
                        <div class="row">
                            <div class="col-xs-8 col-sm-6 col-md-6">
                                <h4 class="black-color" style="margin-top:0px;"><img src="~/contents/img/bellicon.png" alt="" style="margin-right:15px;"><b>Notification List</b></h4>
                            </div>
                            <div class="col-xs-4 col-sm-6 col-md-6">
                                @if (Model.TotalCount > 0)
                                {
                                    <button href="#" class="btn btn-blue pull-right" onclick="ExportToExcelNotification();"> <img src="~/contents/img/export.png" alt="export" /> Export</button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xs-12 col-sm-12 col-md-12 top-offset-20">
                    <div class="row darkBlueblackbackground padding-10">
                        <div class="col-xs-12 col-sm-12 col-md-12">
                            <h4 class="white-color">Notification List <span style="color:#000;" id="NotificationCount">(@Model.TotalCount)</span></h4>
                        </div>
                    </div>
                </div>

                <div class="col-xs-12 col-sm-12 col-md-12">
                    <div class="row" style="box-shadow: 0 0px 0 #fff, 0 1px 6px rgba(0,0,0, 0.1);">
                        <div class="col-xs-12 col-sm-12 col-md-12 top-offset-20">
                            <div class="col-xs-12 col-sm-12 col-md-12 whitebackground padding-bottom-10 ">
                                <div class="col-xs-12 col-sm-12 col-md-12 lightgraybg" style="border-radius:10px;">
                                    <div class="row top-offset-20">
                                        <div class="col-xs-12 col-sm-4 col-md-2">
                                            <div class="form-group">
                                                <label>Notification No.</label>
                                                <input id="txtNotificationNumber" type="text" class="form-control textboxcontrol">
                                            </div>
                                        </div>
                                        <div class="col-xs-12 col-sm-4 col-md-2">
                                            <div class="form-group">
                                                <label>Country</label>
                                                @if (@Model.CountryList != null)
                                                {
                                                    @Html.DropDownListFor(m => Model.CountryList, new SelectList(Model.CountryList, "CountryId", "Name"), "All", new { Id = "ddlCountry", Class = "form-control textboxcontrol" })
                                                }
                                                else
                                                {
                                                    <select id="ddlCountry" class="form-control textboxcontrol">No Country</select>
                                                }
                                            </div>
                                        </div>
                                        <div class="col-xs-12 col-sm-4 col-md-4 SearchAdvnc">
                                            <div class="row">
                                                <div class="col-xs-12 col-sm-12 col-md-12">
                                                    <label>Date of Notification</label>
                                                </div>
                                                <div class="form-group has-feedback ">
                                                    <div class="col-xs-12 col-sm-6 col-md-6 bottom-offset-20">
                                                        @if (Request["DateofNotification_From"] != null)
                                                        {
                                                            <input id="txtNotificationfromdate" type="text" class="form-control date-picker textboxcontrol" placeholder="From date" value="@Convert.ToString(Request["DateofNotification_From"])" />
                                                        }
                                                        else
                                                        {
                                                            <input id="txtNotificationfromdate" type="text" class="form-control date-picker textboxcontrol" placeholder="From date" />
                                                        }
                                                        <i id="fromdatenoticlender" class="glyphicon glyphicon-calendar form-control-feedback blue-color"></i>
                                                        <a href="#" class="crosstofromdate"><i id="fromdatenoticross" class='glyphicon glyphicon-remove blue-color hidden' onclick="return txtfromdatenotiClear();"></i></a>
                                                    </div>
                                                </div>
                                                <div class="form-group has-feedback">
                                                    <div class="col-xs-12 col-sm-6 col-md-6 bottom-offset-20">
                                                        @if (Request["DateofNotification_To"] != null)
                                                        {
                                                            <input id="txtNotificationtodate" type="text" class="form-control date-picker textboxcontrol" placeholder="To date" value="@Convert.ToString(Request["DateofNotification_To"])" / />
                                                        }
                                                        else
                                                        {
                                                            <input id="txtNotificationtodate" type="text" class="form-control date-picker textboxcontrol" placeholder="To date" />
                                                        }
                                                        <i id="todatenoticlender" class="glyphicon glyphicon-calendar form-control-feedback blue-color"></i>
                                                        <a href="#" class="crosstofromdate"><i id="todatenoticross" class='glyphicon glyphicon-remove blue-color hidden' onclick="return txttodatenotiClear();"></i></a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>


                                        <div class="col-xs-12 col-sm-4 col-md-4 SearchAdvnc">
                                            <div class="row">
                                                <div class="col-xs-12 col-sm-12 col-md-12">
                                                    <label>Final Date of Comments</label>
                                                </div>
                                                <div class="form-group has-feedback ">
                                                    <div class="col-xs-12 col-sm-6 col-md-6 bottom-offset-20">
                                                        <input id="txtfromdate" type="text" class="form-control date-picker textboxcontrol" placeholder="From date" />
                                                        <i id="fromdateclender" class="glyphicon glyphicon-calendar form-control-feedback blue-color"></i>
                                                        <a href="#" class="crosstofromdate"><i id="fromdatecross" class='glyphicon glyphicon-remove blue-color hidden' onclick="return txtfromdateClear();"></i></a>
                                                    </div>
                                                </div>
                                                <div class="form-group has-feedback">
                                                    <div class="col-xs-12 col-sm-6 col-md-6 bottom-offset-20">
                                                        <input id="txttodate" type="text" class="form-control date-picker textboxcontrol" placeholder="To date" />
                                                        <i id="todateclender" class="glyphicon glyphicon-calendar form-control-feedback blue-color"></i>
                                                        <a href="#" class="crosstofromdate"><i id="todatecross" class='glyphicon glyphicon-remove blue-color hidden' onclick="return txttodateClear();"></i></a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        @*</div>
                                            <div class="row">*@
                                        <div class="col-xs-12 col-sm-4 col-md-2 SearchAdvnc">
                                            <div class="form-group">
                                                <label>Type</label>
                                                <select id="ddlType" class="form-control textboxcontrol">
                                                    <option value="0" selected>All</option>
                                                    <option value="1">SPS</option>
                                                    <option value="2">TBT</option>
                                                    <option value="3">Both(SPS/TBT)</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="col-xs-12 col-sm-4 col-md-2">
                                            <div class="form-group">
                                                <label>Processing Status</label>
                                                @if (@Model.StatusList != null)
                                                {
                                                    <select id="ddlStage" class="form-control textboxcontrol">
                                                        <option value="">All</option>
                                                        @foreach (BusinessObjects.Notification.StatusMaster item in Model.StatusList)
                                                        {
                                                            if (item.StatusId > 11)
                                                            {
                                                                if (Request["StatusId"] != null && Convert.ToInt32(Request["StatusId"]) == @item.StatusId)
                                                                {
                                                                    <option value="@item.StatusId" selected="selected" class="optionChild">@item.Status</option>
                                                                }
                                                                else
                                                                {
                                                                    <option value="@item.StatusId" class="optionChild">@item.Status</option>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                if (Request["StatusId"] != null && Convert.ToInt32(Request["StatusId"]) == @item.StatusId)
                                                                {
                                                                    <option value="@item.StatusId" selected="selected" class="optionGroup">@item.Status</option>
                                                                }
                                                                else
                                                                {
                                                                    <option value="@item.StatusId" class="optionGroup">@item.Status</option>
                                                                }
                                                            }
                                                        }

                                                    </select>
                                                }
                                            </div>
                                        </div>
                                        <div class="col-xs-12 col-sm-4 col-md-2 hidden">
                                            <div class="form-group">
                                                <label>Meeting date</label>
                                                <div class="form-group has-feedback ">
                                                    <input id="txtMeetingDate" type="text" class="form-control date-picker textboxcontrol" placeholder="Meeting date" value="@(Request["MeetingDate"])" />
                                                    <i id="Meetingdateclender" class="glyphicon glyphicon-calendar form-control-feedback blue-color" style="right:0;"></i>
                                                    <a href="#" class="crosstofromdate"><i id="Meetingdatecross" class='glyphicon glyphicon-remove blue-color hidden' onclick="return txtMeetingdateClear();"></i></a>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-xs-12 col-sm-4 col-md-2 SearchAdvnc">
                                            <div class="form-group">
                                                <label>Action</label>
                                                @if (@Model.ActionList != null)
                                                {
                                                    <select id="ddlAction" class="form-control textboxcontrol">
                                                        <option value="" selected="selected">All</option>
                                                        @foreach (BusinessObjects.Notification.ActionMaster item in Model.ActionList)
                                                        {
                                                            if (Request["ActionId"] != null && Convert.ToInt32(Request["ActionId"]) == @item.ActionId)
                                                            {
                                                                <option value="@item.ActionId" selected="selected">@item.Action</option>
                                                            }
                                                            else
                                                            {
                                                                <option value="@item.ActionId">@item.Action</option>
                                                            }
                                                        }
                                                    </select>
                                                }
                                            </div>
                                        </div>
                                        <div class="col-xs-12 col-sm-4 col-md-2 SearchAdvnc">
                                            <div class="form-group">
                                                <label>Action Status</label>
                                                @if (@Model.ActionStatusList != null)
                                                {
                                                    <select id="ddlActionStatus" class="form-control textboxcontrol">
                                                        <option value="" selected="selected">All</option>
                                                        @foreach (BusinessObjects.Notification.Status item in Model.ActionStatusList)
                                                        {
                                                            if (Request["ActionStatus"] != null && Convert.ToInt32(Request["ActionStatus"]) == @item.StatusId)
                                                            {
                                                                <option value="@item.StatusId" selected="selected">@item.StatusName</option>
                                                            }
                                                            else
                                                            {
                                                                <option value="@item.StatusId">@item.StatusName</option>
                                                            }
                                                        }
                                                    </select>
                                                }
                                            </div>
                                        </div>
                                        <div class="col-xs-12 col-sm-4 col-md-2 SearchAdvnc">
                                            <div class="form-group">
                                                <label>HS Code</label>
                                                <div class="form-group has-feedback ">
                                                    @if (Request["Hscode"] != null)
                                                    {
                                                        <input type="text" class="form-control textboxcontrol" id="txtHscode" placeholder="Hscode" value="@Convert.ToString(Request["Hscode"])">
                                                        <input type="hidden" id="hdnHsCode" value="@Convert.ToString(Request["Hscode"])" />
                                                    }
                                                    else
                                                    {
                                                        <input type="text" class="form-control textboxcontrol" id="txtHscode" placeholder="Hscode">
                                                        <input type="hidden" id="hdnHsCode" value="" />
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                        <div id="DivBtn" class="bottom-offset-10">
                                            <a class="btn btn-red pull-right left-offset-10 bottom-offset-10" onclick="return Clear();"> <span class="glyphicon glyphicon-remove"></span> Clear</a>
                                            <a class="btn btn-blue pull-right left-offset-10 bottom-offset-10" onclick="return SearchNotification(1);"> <span class="glyphicon glyphicon-search"></span> Search</a>
                                            <a class="btn btn-blue pull-right left-offset-10 bottom-offset-10" onclick="return AdvanceSearch();"> <span id="GlySearch" class="glyphicon glyphicon-plus"></span> Advance Search</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="row" id="divContent">
                                    <div class="col-xs-12 col-sm-12 col-md-12 top-offset-20">
                                        <div class="table-responsive notificationlist">
                                            <table class="table table-bordered display" id="notificationlist" cellspacing="0" width="100%">
                                                <thead class="second-blackbackground">
                                                    <tr>
                                                        <th>Notification</th>
                                                        <th>Notification Date</th>
                                                        <th>Final Date of Comments</th>
                                                        <th>Country</th>
                                                        <th>Processing Status</th>
                                                        <th class="text-center" style="padding-right:2%;">Stakeholder Responses</th>
                                                        <th>Action Status</th>
                                                        <th></th>
                                                        @*<th>Edit</th>
                                                            <th>Export</th>*@
                                                    </tr>
                                                </thead>

                                                <tbody id="NotificationData" class="whitebackground">
                                                    @if (@Model.Notifications != null)
                                                    {
                                                        foreach (BusinessObjects.Notification.Notification item in Model.Notifications)
                                                        {
                                                            <tr class="hoverborder">
                                                                <td class="width-30">
                                                                    <a href="@Url.Action("NotificationView", "WTO" , new { Id=item.NotificationId })" target="_blank" class="red-color ">
                                                                        <p class="red-color" style="width:450px;">@item.NotificationNumber</p>
                                                                    </a>
                                                                    <p style="word-wrap:break-word; width:350px;">
                                                                        <b>Title :</b>@item.Title
                                                                    </p>
                                                                </td>
                                                                <td class="text-center width-10">@item.NotificationDate</td>
                                                                <td class="text-center width-10">@item.FinalDateOfComments</td>
                                                                <td class="text-center width-10">@item.Country</td>
                                                                <td class="tooltiprelative width-10">
                                                                    @if (Model.NotificationProcessDots != null && Model.NotificationProcessDots.Count > 0)
                                                                    {
                                                                        List<BusinessObjects.Notification.NotificationProcessDot> NotificationProcessDot = Model.NotificationProcessDots.Where(x => x.NotificationId == item.NotificationId).Select(m => new BusinessObjects.Notification.NotificationProcessDot { NotificationId = m.NotificationId, ColorCode = m.ColorCode, TooltipText = m.TooltipText, Sequence = m.Sequence }).ToList();
                                                                        NotificationProcessDot = NotificationProcessDot.OrderBy(m => m.Sequence).ToList();
                                                                        foreach (BusinessObjects.Notification.NotificationProcessDot objNPS in NotificationProcessDot)
                                                                        {
                                                                            <div class="small-circle" style="background: @objNPS.ColorCode;" data-toggle="tooltip" data-placement="bottom" title="@objNPS.TooltipText"></div>
                                                                        }
                                                                    }
                                                                </td>
                                                                @if (item.MailCount > 0)
                                                                {
                                                                    <td class="text-center width-10">@item.ResponseCount / @item.MailCount</td>
                                                                }
                                                                else
                                                                {
                                                                    <td class="text-center width-10">--</td>
                                                                }

                                                                <td class="tooltiprelative width-10">
                                                                    @if (Model.NotificationActionDots != null && Model.NotificationActionDots.Count > 0)
                                                                    {
                                                                        List<BusinessObjects.Notification.NotificationActionDot> NotificationActionDot = Model.NotificationActionDots.Where(x => x.NotificationId == item.NotificationId).Select(m => new BusinessObjects.Notification.NotificationActionDot { NotificationId = m.NotificationId, ColorCode = m.ColorCode, TooltipText = m.TooltipText, Sequence = m.Sequence }).ToList();
                                                                        NotificationActionDot = NotificationActionDot.OrderBy(m => m.Sequence).ToList();
                                                                        foreach (BusinessObjects.Notification.NotificationActionDot objNPS in NotificationActionDot)
                                                                        {
                                                                            <div class="small-circle" style="background: @objNPS.ColorCode;" data-toggle="tooltip" data-placement="bottom" title="@objNPS.TooltipText"></div>
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        @("--")
                                                                    }
                                                                </td>
                                                                <td class="width-10 text-right">
                                                                    <a class="@(item.IsInMeeting?"hidden":"")" data-callfor="@item.MeetingDate" title="Add Meeting" onclick="return CheckNotificationExistMOM(this, '@item.NotificationId');"><img src="~/contents/img/MeetingIcon.png" style="width:25px;" /></a>
                                                                    <a href="@Url.Action("Edit_Notification", "AddNotification" , new { Id=@item.NotificationId })" data-toggle="tooltip" data-placement="bottom" title="Edit Notification"><img src="~/contents/img/bedit.png" /></a>
                                                                    <a href="@Url.Action("Download","API/AddUpdateNotification",new { Id = @item.NotificationId})" data-toggle="tooltip" data-placement="bottom" title="Export Notification Details"><img src="~/contents/img/export2.png" /></a>
                                                                </td>
                                                            </tr>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <tr>
                                                            <td colspan="10">No Record Found ...</td>
                                                        </tr>
                                                    }
                                                </tbody>

                                            </table>
                                        </div>
                                    </div>
                                    <div id="divPaginationLoadingPanel" class="col-md-12 text-center hidden">
                                        <img style="align-self:center; margin-top: -50px;" src="~/contents/img/Loading_PleaseWait.gif" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- body section End -->
<!--Meeting Date Popup start-->
<div class="modal fade selecthrmodal" id="ModelNotificationMeeting" role="dialog" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content selecthrcontent">
            <div class="modal-header selecthrheader">
                <button type="button" class="close selecthrclose" onclick="return CloseMeetingDatepopup();">
                    <span class="glyphicon glyphicon-remove"></span>
                </button>
            </div>
            <div class="modal-body selecthrbody">
                <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-12">
                        <div class="col-xs-12 col-sm-12 col-md-12 selecthrbodyinner" style="min-height:150px;">
                            <div class='col-xs-12 col-sm-12 col-md-12 top-offset-30'>
                                <div class="padding-bottom-10">
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-4 col-md-4">
                                            <p class="wto-label-bold dark-blue">Meeting Date<sup class="mandetory">*</sup> <span class="pull-right">:</span></p>
                                        </div>
                                        <div class="col-xs-12 col-sm-8 col-md-8">
                                            <input type="hidden" id="hdnNotificationId" value="" />
                                            <input type="text" class="form-control date-picker" style="cursor:pointer" id="txtmeetingdate" onchange="return IsMeetingExists(0);" />
                                            <i class="glyphicon glyphicon-calendar form-control-feedback blue-color"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-xs-12 col-sm-12 col-md-12 bottom-offset-20">
                                <div class="row">
                                    <div class="col-xs-12 col-sm-12 col-md-12">
                                        <a class="btn btn-red pull-right" onclick="return CloseMeetingDatepopup();">Close&nbsp;<span class="glyphicon glyphicon-remove"></span></a>
                                        <a class="btn btn-dark-green pull-right" style="margin-right:15px;" onclick="return SaveMeetingAndNotification();"><img src="~/contents/img/save.png" />&nbsp;Save</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    (function ($) {
        $.fn.fixMe = function () {
            return this.each(function () {
                var $this = $(this),
                    $t_fixed;
                function init() {
                    $this.wrap('<div/>');
                    $t_fixed = $this.clone();
                    $t_fixed.find("tbody").remove().end().addClass("fixed").insertBefore($this);
                    resizeFixed();
                }
                function resizeFixed() {
                    $t_fixed.find("th").each(function (index) {
                        $(this).css("width", $this.find("th").eq(index).outerWidth() + "px");
                    });
                }
                function scrollFixed() {
                    var offset = $(this).scrollTop(),
                        tableOffsetTop = $this.offset().top,
                        tableOffsetBottom = tableOffsetTop + $this.height() - $this.find("thead").height();
                    if (offset < tableOffsetTop || offset > tableOffsetBottom)
                        $t_fixed.hide();
                    else if (offset >= tableOffsetTop && offset <= tableOffsetBottom && $t_fixed.is(":hidden"))
                        $t_fixed.show();
                }
                $(window).resize(resizeFixed);
                $(window).scroll(scrollFixed);
                init();
            });
        };
    })(jQuery);

    $(document).ready(function () {
        if ($(window).width() > 700) {
            $("table").fixMe();
        }
    });
    $(window).scroll(function () {
        if (!$("#toggleOpenClose").hasClass("is-closed")) {
            $("#toggleOpenClose").click();
        }
    });
</script>
