@model BusinessObjects.Notification.NotificationCountries
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>

      .ui-autocomplete-loading {
            background: white url('http://jqueryui.com/demos/autocomplete/images/ui-anim_basic_16x16.gif') right center no-repeat;
        }

        .ui-dialog {
            overflow: visible !important;
        }
        .ui-autocomplete {
            max-height: 200px;
            overflow-y: auto;
            /* prevent horizontal scrollbar */
            overflow-x: hidden;
            width:60% !important;
        }
        /* IE 6 doesn't support max-height
        * we use height instead, but this forces the menu to always be this tall
        */
        * html .ui-autocomplete {   
            height: 200px;
        }
         /*.chosen-drop {
                overflow: hidden;
                height: 140px;
                overflow-y: scroll;
                z-index: 1010;
            }*/

    .chosen-container {
    height:34px !important;
    }
    .chosen-container-multi .chosen-choices {
        z-index:1;
height: 36px !important;
    overflow-y: auto !important;
    }
    .chosen-container {
        width:250px !important;
    }
</style>
<link href="~/contents/css/css/jquery-ui.css" rel="stylesheet" />
<script src="~/contents/js/jquery-ui.js"></script>
<link href="~/contents/css/css/chosen.min.css" rel="stylesheet" />
<script src="~/scripts/chosen.jquery.min.js"></script>
@*<link href="~/contents/css/css/bootstrap-combobox.css" rel="stylesheet" />
<script src="~/contents/js/bootstrap-combobox.js"></script>*@
<div class="container-fluid">
    <div class="row bodybackground">
        <div class="col-xs-12 col-sm-12 col-md-12">
            <div class="row topbg">
                <div class="col-xs-12 col-sm-12 col-md-12 top-offset-20 bottom-offset-10">
                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12">
                            <h4 class="black-color" style="margin-top: 0px;">
                                <img src="~/contents/img/bellicon.png" alt="" style="margin-right: 15px;"><b>Country List</b>
                            </h4>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-12 col-md-12 top-offset-20">
                <div class="row darkBlueblackbackground padding-10">
                    <div class="col-xs-12 col-sm-12 col-md-12">
                        <h4 class="white-color">Country List <span style="color:#000;" id="NotificationCount">(@Model.TotalCount)</span></h4>
                    </div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-12 col-md-12">
                <div class="row" style="box-shadow: 0 0px 0 #fff, 0 1px 6px rgba(0,0,0, 0.1);">
                    <div class="col-xs-12 col-sm-12 col-md-12 top-offset-20">
                        <div class="col-xs-12 col-sm-12 col-md-12 whitebackground padding-bottom-10 ">
                            <div class="col-xs-12 col-sm-12 col-md-12 lightgraybg" style="border-radius: 10px;">
                                <div class="row top-offset-20">
                                    <div class="col-xs-12 col-sm-4 col-md-3">
                                        <div class="form-group">
                                            <label>HSCode</label>
                                            <input type="text" class="form-control textboxcontrol" id="txtHscode" placeholder="Hscode" value="@ViewBag.Hscode">
                                            <input type="hidden" id="hdnHsCode" value="@ViewBag.Hscode" />
                                        </div>
                                    </div>
                                    <div class="col-xs-12 col-sm-4 col-md-3">
                                        <div class="form-group">
                                            <label>Country Name</label>
                                            @if (@Model.CountryList != null)
                                            {
                                                @Html.DropDownListFor(m => Model.CountryList, new SelectList(Model.CountryList, "CountryId", "Name"), new { Id = "ddlCountry", Class = "form-control textboxcontrol",multiple="multiple" })
                                            }
                                            else
                                            {
                                                <select id="ddlCountry" class="form-control textboxcontrol">No Country</select>
                                            }
                                        </div>
                                    </div>
                                    <div class="col-xs-12 col-sm-4 col-md-3">
                                        <div class="form-group has-feedback ">
                                            <label>From</label>
                                            <input id="txtfromdate" type="text" class="form-control date-picker textboxcontrol" value="@ViewBag.FromDate" />
                                            <i id="fromdateclender" class="glyphicon glyphicon-calendar form-control-feedback blue-color"></i>
                                            <a href="#" class="crosstofromdate"><i id="fromdatecross" class='glyphicon glyphicon-remove blue-color hidden' onclick="return txtfromdateClear();"></i></a>
                                        </div>
                                    </div>
                                    <div class="col-xs-12 col-sm-4 col-md-3">
                                        <div class="form-group has-feedback ">
                                            <label>To</label>
                                            <input id="txttodate" type="text" class="form-control date-picker textboxcontrol" value="@ViewBag.ToDate" />
                                            <i id="fromdateclender" class="glyphicon glyphicon-calendar form-control-feedback blue-color"></i>
                                            <a href="#" class="crosstofromdate"><i id="fromdatecross" class='glyphicon glyphicon-remove blue-color hidden' onclick="return txtfromdateClear();"></i></a>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-xs-12 col-sm-12 col-md-12">
                                        <div class="form-group">
                                            <label class="sr-only">Search</label>
                                            <a class="btn btn-blue pull-right left-offset-10" href="@Url.Action("WTODashboard", "WTO")"><img src="/contents/img/back-16.png">&nbsp;Back </a>
                                            <a href="#" class="btn btn-red pull-right left-offset-10" onclick="return Clear();" style="margin-bottom: 20px;"><span class="glyphicon glyphicon-remove"></span>Clear</a>
                                            <a href="#" class="btn btn-blue pull-right left-offset-10" onclick="return Search(1);" style="margin-bottom: 20px;"><span class="glyphicon glyphicon-search"></span>Search</a>
                                          </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row" id="divContent">
                                <div class="col-xs-12 col-sm-12 col-md-12 top-offset-20">
                                    <div class="table-responsive notificationlist">
                                        <table class="table table-bordered display" id="notificationlist" cellspacing="0" width="100%">
                                            <thead class="second-blackbackground">
                                                <tr>
                                                    <th class="col-sm-4">Country Name</th>
                                                    <th class="col-sm-4 text-center">Country Code</th>
                                                    <th class="col-sm-4 text-center">Notification Count</th>
                                                </tr>
                                            </thead>
                                            <tbody id="NotificationData">
                                                @if (Model.objNotificationCountries != null)
                                                {
                                                    if (Model.objNotificationCountries.Count > 0)
                                                    {
                                                        foreach (var Item in Model.objNotificationCountries)
                                                        {
                                                            <tr>
                                                                <td>@Item.CountryName</td>
                                                                <td class="text-center">@Item.CountryCode</td>
                                                                <td class="text-center">@Item.NotificationCount</td>
                                                            </tr>
                                                        }
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                                <div id="divPaginationLoadingPanel" class="col-md-12 text-center hidden">
                                    <img style="align-self:center; margin-top: -50px;" src="~/contents/img/Loading_PleaseWait.gif" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
@Html.Hidden("hdnPageIndex", "1")
@Html.Hidden("hdnNotificationCount", (Convert.ToInt64(Model.TotalCount.Length > 0 ? Model.TotalCount : "0")))
@if (Decimal.Divide(Convert.ToInt64(Model.TotalCount.Length > 0 ? Model.TotalCount : "0"), 10) > Convert.ToInt64(Model.TotalCount.Length > 0 ? Model.TotalCount : "0") / (Request["PageSize"] == null ? 10 : Convert.ToInt32(Request["PageSize"])))
{
    @Html.Hidden("hdnMaxPageIndex", Convert.ToInt64(Model.TotalCount.Length > 0 ? Model.TotalCount : "0") / (Request["PageSize"] == null ? 10 : Convert.ToInt32(Request["PageSize"])) + 1)
}
else
{
    @Html.Hidden("hdnMaxPageIndex", Convert.ToInt64(Model.TotalCount.Length > 0 ? Model.TotalCount : "0") / (Request["PageSize"] == null ? 10 : Convert.ToInt32(Request["PageSize"])))
}
<script>
    var Countries;
    $(function () {
        Countries=  '@Convert.ToString(Request["CountryId"])';
        $('#ddlCountry').val(Countries.split(","));
        $('#ddlCountry').chosen();
    })
    var IsScrollingOnce = true;
    function Search(PageIndx) {
        $('#hdnPageIndex').val(PageIndx);
        ShowGlobalLodingPanel();
        var DateFrom = $('#txtfromdate').val().trim();
        var DateTo = $('#txttodate').val().trim();
        if ((DateFrom != '' && DateFrom != null) && (DateTo != '' && DateTo != null)) {
            var to = new Date(DateTo);
            var from = new Date(DateFrom);
            if (to < from) {
                Alert("Alert", "To date can not be less than From date.<br/>", "Ok");
                HideGlobalLodingPanel();
                return false;
            }
        }
        var CountryId="";
        for (var i = 0; i < $('[id$=ddlCountry]').val().length; i++)
        {
            CountryId += $('[id$=ddlCountry]').val()[i] + ",";
        }
        var obj = {
            Hscode: $('#hdnHsCode').val().trim(),
            CountryId:CountryId, //$('[id$=ddlCountry]').val(),
            FromDate: $('#txtfromdate').val().trim(),
            ToDate: $('#txttodate').val().trim(),
            PageIndex: PageIndx,
            PageSize: 10
        }
        $.ajax({
            url: "/api/NotificationList/GetNotificationCountryList",
            async: false,
            type: "POST",
            data: JSON.stringify(obj),
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                $('#divPaginationLoadingPanel').addClass('hidden');
                if (result != null) {
                    if (PageIndx == 1) {
                        var Total = parseInt(result.TotalCount);
                        var tmpPages = Total / 10;
                        var tmpArr = tmpPages.toString().split('.');
                        var TotalPages = 0;
                        if (parseInt(tmpArr[1]) > 0)
                            TotalPages = parseInt(tmpArr[0]) + 1;
                        else
                            TotalPages = parseInt(tmpArr[0]);
                        $('[id$=hdnMaxPageIndex]').val(TotalPages);
                        $('#lblCount').text(parseInt(result.TotalCount));
                        $('#NotificationData').empty();
                    }
                    debugger;
                    var NewRow = '';
                    if (result.objNotificationCountries != null && result.objNotificationCountries.length > 0) {
                        $.each(result.objNotificationCountries, function (i, v) {
                            NewRow += '<tr>';
                            NewRow += '<td>' + v.CountryName + '</td>';
                            NewRow += '<td class="text-center">' + v.CountryCode + '</td>';
                            NewRow += '<td class="text-center">' + v.NotificationCount + '</td></tr>';
                        })
                    }
                    else
                    {
                        if ($('#NotificationData tr').length > 0)
                        {
                            NewRow = '';
                        }
                        else
                        {
                            NewRow += '<tr id="divNorecord"><td colspan="3">No Record Found ...</td></tr>';
                        }
                    }                 
                    $('#NotificationCount').text('(' + result.TotalCount + ')');
                    $('#hdnNotificationCount').val(result.TotalCount);
                    $('#NotificationData').append(NewRow);
                    $('.dropdown-menu').css('display','none');
                }
                HideGlobalLodingPanel();
                IsScrollingOnce = true;
            },
            failure: function (result) {
                Alert("Alert", "Something went wrong.<br/>", "Ok");
            },
            error: function (result) {
                Alert("Alert", "Something went wrong.<br/>", "Ok");
            },
            complete: function () {
            }
        })
    }
    function Clear() {
        $('#txtHscode').val('');
        $('#hdnHsCode').val('');
        $('[id$=ddlCountry]').val('');
        $('#ddlCountry').chosen('trigger:updated');
        $('.combobox-container').find('.glyphicon-remove').click();
        $('#txtfromdate').val('@ViewBag.FromDate');
        $('#txttodate').val('@ViewBag.ToDate');
        Search(1);
    }
    $(window).on("scroll", function (e) {
        var $o = $(e.currentTarget);
        if ($(window).scrollTop() + $(window).innerHeight() >= $(document).height() - 25 && IsScrollingOnce) {
            IsScrollingOnce = false;
            $('#divPaginationLoadingPanel').removeClass('hidden');
            var NewVal = 0;
            var NewVal = Number($('#hdnPageIndex').val()) + Number(1);
            var MaxVal = parseInt($('#hdnMaxPageIndex').val());
            if (NewVal <= MaxVal) {
                Search(NewVal);
                $('#divPaginationLoadingPanel').addClass('hidden');
            }
            else
                $('#divPaginationLoadingPanel').addClass('hidden');
        }
    });
</script>